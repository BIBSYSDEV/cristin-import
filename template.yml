AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'


Parameters:
  BasePath:
    Type: String
    Default: s3
  CustomDomain:
    Type: String
    Default: api.dev.nva.aws.unit.no

Resources:


  RestAuthorizer:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: no.unit.cristin.RestAuthorizer::handleRequest

      Runtime: java11
      MemorySize: 1408
      Environment:
        Variables:
          ALLOWED_ORIGIN: '*'
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Resource: '*'
              Action:
                - "secretsmanager:GetResourcePolicy"
                - "secretsmanager:GetSecretValue"
                - "secretsmanager:DescribeSecret"
                - "secretsmanager:ListSecretVersionIds"


  CallerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service: [ apigateway.amazonaws.com ]
      Path: /
      Policies:
        - PolicyName: UserRestAccessToS3Bucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - s3:*
                Effect: Allow
                Resource: '*'

  BucketApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: "orestis-cloudformation-api-test"
      StageName: Prod
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          CreateUsagePlan: PER_API
          Quota:
            Limit: 1000
            Offset: 0
            Period: DAY
          UsagePlanName: orestis-s3-usage-plan


      DefinitionBody:
        swagger: '2.0'
        info:
          version: '2016-10-13T23:04:43Z'
          title: MyS3
        paths:
          "/":
            get:
              produces:
                - application/json
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Content-Length:
                      type: string
                    Timestamp:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
               - ApiKey: []
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                      method.response.header.Content-Length: integration.response.header.Content-Length
                      method.response.header.Timestamp: integration.response.header.Date
                  5\d{2}:
                    statusCode: '500'
                uri: arn:aws:apigateway:eu-west-1:s3:path//
                passthroughBehavior: when_no_match
                httpMethod: GET
                type: aws
          "/{folder}":
            get:
              produces:
                - application/json
              parameters:
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Content-Length:
                      type: string
                    Date:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
                - ApiKey: [ ]
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                      method.response.header.Date: integration.response.header.Date
                      method.response.header.Content-Length: integration.response.header.content-length
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.path.bucket: method.request.path.folder
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}
                passthroughBehavior: when_no_match
                httpMethod: GET
                type: aws
            put:
              produces:
                - application/json
              parameters:
                - name: Content-Type
                  in: header
                  required: false
                  type: string
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Content-Length:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                      method.response.header.Content-Length: integration.response.header.Content-Length
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.header.x-amz-acl: "'authenticated-read'"
                  integration.request.path.bucket: method.request.path.folder
                  integration.request.header.Content-Type: method.request.header.Content-Type
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}
                passthroughBehavior: when_no_match
                httpMethod: PUT
                type: aws
            delete:
              produces:
                - application/json
              parameters:
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Date:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
                - ApiKey: [ ]
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                      method.response.header.Date: integration.response.header.Date
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.path.bucket: method.request.path.folder
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}
                passthroughBehavior: when_no_match
                httpMethod: DELETE
                type: aws
          "/{folder}/{item}":
            get:
              produces:
                - application/json
              parameters:
                - name: item
                  in: path
                  required: true
                  type: string
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    content-type:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
                - ApiKey: [ ]
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.content-type: integration.response.header.content-type
                      method.response.header.Content-Type: integration.response.header.Content-Type
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.path.object: method.request.path.item
                  integration.request.path.bucket: method.request.path.folder
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}/{object}
                passthroughBehavior: when_no_match
                httpMethod: GET
                type: aws
            head:
              produces:
                - application/json
              parameters:
                - name: item
                  in: path
                  required: true
                  type: string
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Content-Length:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
                - ApiKey: [ ]
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                      method.response.header.Content-Length: integration.response.header.Content-Length
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.path.object: method.request.path.item
                  integration.request.path.bucket: method.request.path.folder
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}/{object}
                passthroughBehavior: when_no_match
                httpMethod: HEAD
                type: aws
            put:
              produces:
                - application/json
              parameters:
                - name: Content-Type
                  in: header
                  required: false
                  type: string
                - name: item
                  in: path
                  required: true
                  type: string
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Content-Length:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
                - ApiKey: [ ]
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                    responseParameters:
                      method.response.header.Content-Type: integration.response.header.Content-Type
                      method.response.header.Content-Length: integration.response.header.Content-Length
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.path.object: method.request.path.item
                  integration.request.header.x-amz-acl: "'public-read-write'"
                  integration.request.path.bucket: method.request.path.folder
                  integration.request.header.Content-Type: method.request.header.Content-Type
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}/{object}
                passthroughBehavior: when_no_match
                httpMethod: PUT
                type: aws
            delete:
              produces:
                - application/json
              parameters:
                - name: item
                  in: path
                  required: true
                  type: string
                - name: folder
                  in: path
                  required: true
                  type: string
              responses:
                '200':
                  description: 200 response
                  schema:
                    "$ref": "#/definitions/Empty"
                  headers:
                    Content-Length:
                      type: string
                    Content-Type:
                      type: string
                '400':
                  description: 400 response
                '500':
                  description: 500 response
              security:
                - ApiKey: [ ]
              x-amazon-apigateway-integration:
                credentials: !GetAtt CallerRole.Arn
                responses:
                  4\d{2}:
                    statusCode: '400'
                  default:
                    statusCode: '200'
                  5\d{2}:
                    statusCode: '500'
                requestParameters:
                  integration.request.path.object: method.request.path.item
                  integration.request.path.bucket: method.request.path.folder
                uri: arn:aws:apigateway:eu-west-1:s3:path/{bucket}/{object}
                passthroughBehavior: when_no_match
                httpMethod: DELETE
                type: aws
        securityDefinitions:
          ApiKey:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: custom
            x-amazon-apigateway-authorizer:
              type: request
              authorizerUri:
                Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RestAuthorizer.Arn}/invocations
              identitySource: method.request.header.Authorization
        definitions:
          Empty:
            type: object
            title: Empty Schema


  ExternalApiStaticUrl:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      BasePath: !Ref BasePath
      DomainName: !Ref CustomDomain
      RestApiId: !Ref BucketApi
      Stage: !Ref BucketApi.Stage




